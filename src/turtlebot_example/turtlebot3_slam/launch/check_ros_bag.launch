<launch>
    <arg name="model" default="waffle" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="slam_methods" default="cartographer" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
    <!-- <node pkg="tf" type="static_transform_publisher" name="tf_base_footprint_to_base_link" args="0 0 0 0 0 0 base_footprint base_link 100"/> -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="tf_base_link_base_scan" args="0 0 0 0 0 0 base_link base_scan 100"/> -->
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>
  
    <arg name="set_base_frame" default="base_footprint"/>
    <arg name="set_odom_frame" default="odom"/>
    <arg name="set_map_frame"  default="map"/>

  <include file="$(find turtlebot3_bringup)/launch/includes/description.launch.xml">
    <arg name="model" value="$(arg model)" />
  </include>

  <node pkg="turtlebot3_fake" type="turtlebot3_fake_node" name="turtlebot3_fake_node" output="screen" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
    <arg name="model" value="$(arg model)"/>
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
  </include>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot3_slam)/rviz/turtlebot3_cartographer.rviz" />
</launch>
